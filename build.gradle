plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.netflix.nebula.netflixoss' version '11.3.2'
}
ext.githubProjectName = rootProject.name
group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.2")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.10.RELEASE'

//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

subprojects {
    apply plugin: 'com.netflix.nebula.netflixoss'
    apply plugin: 'java-library'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }


    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project

    repositories {
        mavenCentral()
    }

    if (project.hasProperty('useMavenLocal')) {
        repositories {
            mavenLocal()
        }
    }
    if (project.getProperty('status').equals("snapshot")) {
        repositories {
            maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-snapshots' }
        }
    }
}